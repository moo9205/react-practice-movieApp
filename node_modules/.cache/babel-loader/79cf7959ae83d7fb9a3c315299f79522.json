{"ast":null,"code":"const color = require('kleur');\n\nconst Prompt = require('./prompt');\n\nconst {\n  cursor,\n  erase\n} = require('sisteransi');\n\nconst {\n  style,\n  figures,\n  clear,\n  lines\n} = require('../util');\n\nconst isNumber = /[0-9]/;\n\nconst isDef = any => any !== undefined;\n\nconst round = (number, precision) => {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n};\n/**\n * NumberPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {String} [opts.style='default'] Render style\n * @param {Number} [opts.initial] Default value\n * @param {Number} [opts.max=+Infinity] Max value\n * @param {Number} [opts.min=-Infinity] Min value\n * @param {Boolean} [opts.float=false] Parse input as floats\n * @param {Number} [opts.round=2] Round floats to x decimals\n * @param {Number} [opts.increment=1] Number to increment by when using arrow-keys\n * @param {Function} [opts.validate] Validate function\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.error] The invalid error label\n */\n\n\nclass NumberPrompt extends Prompt {\n  constructor(opts = {}) {\n    super(opts);\n    this.transform = style.render(opts.style);\n    this.msg = opts.message;\n    this.initial = isDef(opts.initial) ? opts.initial : '';\n    this.float = !!opts.float;\n    this.round = opts.round || 2;\n    this.inc = opts.increment || 1;\n    this.min = isDef(opts.min) ? opts.min : -Infinity;\n    this.max = isDef(opts.max) ? opts.max : Infinity;\n    this.errorMsg = opts.error || `Please Enter A Valid Value`;\n\n    this.validator = opts.validate || (() => true);\n\n    this.color = `cyan`;\n    this.value = ``;\n    this.typed = ``;\n    this.lastHit = 0;\n    this.render();\n  }\n\n  set value(v) {\n    if (!v && v !== 0) {\n      this.placeholder = true;\n      this.rendered = color.gray(this.transform.render(`${this.initial}`));\n      this._value = ``;\n    } else {\n      this.placeholder = false;\n      this.rendered = this.transform.render(`${round(v, this.round)}`);\n      this._value = round(v, this.round);\n    }\n\n    this.fire();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  parse(x) {\n    return this.float ? parseFloat(x) : parseInt(x);\n  }\n\n  valid(c) {\n    return c === `-` || c === `.` && this.float || isNumber.test(c);\n  }\n\n  reset() {\n    this.typed = ``;\n    this.value = ``;\n    this.fire();\n    this.render();\n  }\n\n  exit() {\n    this.abort();\n  }\n\n  abort() {\n    let x = this.value;\n    this.value = x !== `` ? x : this.initial;\n    this.done = this.aborted = true;\n    this.error = false;\n    this.fire();\n    this.render();\n    this.out.write(`\\n`);\n    this.close();\n  }\n\n  async validate() {\n    let valid = await this.validator(this.value);\n\n    if (typeof valid === `string`) {\n      this.errorMsg = valid;\n      valid = false;\n    }\n\n    this.error = !valid;\n  }\n\n  async submit() {\n    await this.validate();\n\n    if (this.error) {\n      this.color = `red`;\n      this.fire();\n      this.render();\n      return;\n    }\n\n    let x = this.value;\n    this.value = x !== `` ? x : this.initial;\n    this.done = true;\n    this.aborted = false;\n    this.error = false;\n    this.fire();\n    this.render();\n    this.out.write(`\\n`);\n    this.close();\n  }\n\n  up() {\n    this.typed = ``;\n\n    if (this.value === '') {\n      this.value = this.min - this.inc;\n    }\n\n    if (this.value >= this.max) return this.bell();\n    this.value += this.inc;\n    this.color = `cyan`;\n    this.fire();\n    this.render();\n  }\n\n  down() {\n    this.typed = ``;\n\n    if (this.value === '') {\n      this.value = this.min + this.inc;\n    }\n\n    if (this.value <= this.min) return this.bell();\n    this.value -= this.inc;\n    this.color = `cyan`;\n    this.fire();\n    this.render();\n  }\n\n  delete() {\n    let val = this.value.toString();\n    if (val.length === 0) return this.bell();\n    this.value = this.parse(val = val.slice(0, -1)) || ``;\n\n    if (this.value !== '' && this.value < this.min) {\n      this.value = this.min;\n    }\n\n    this.color = `cyan`;\n    this.fire();\n    this.render();\n  }\n\n  next() {\n    this.value = this.initial;\n    this.fire();\n    this.render();\n  }\n\n  _(c, key) {\n    if (!this.valid(c)) return this.bell();\n    const now = Date.now();\n    if (now - this.lastHit > 1000) this.typed = ``; // 1s elapsed\n\n    this.typed += c;\n    this.lastHit = now;\n    this.color = `cyan`;\n    if (c === `.`) return this.fire();\n    this.value = Math.min(this.parse(this.typed), this.max);\n    if (this.value > this.max) this.value = this.max;\n    if (this.value < this.min) this.value = this.min;\n    this.fire();\n    this.render();\n  }\n\n  render() {\n    if (this.closed) return;\n\n    if (!this.firstRender) {\n      if (this.outputError) this.out.write(cursor.down(lines(this.outputError, this.out.columns) - 1) + clear(this.outputError, this.out.columns));\n      this.out.write(clear(this.outputText, this.out.columns));\n    }\n\n    super.render();\n    this.outputError = ''; // Print prompt\n\n    this.outputText = [style.symbol(this.done, this.aborted), color.bold(this.msg), style.delimiter(this.done), !this.done || !this.done && !this.placeholder ? color[this.color]().underline(this.rendered) : this.rendered].join(` `); // Print error\n\n    if (this.error) {\n      this.outputError += this.errorMsg.split(`\\n`).reduce((a, l, i) => a + `\\n${i ? ` ` : figures.pointerSmall} ${color.red().italic(l)}`, ``);\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText + cursor.save + this.outputError + cursor.restore);\n  }\n\n}\n\nmodule.exports = NumberPrompt;","map":{"version":3,"sources":["/home/moo/Desktop/practice/react-practice-movieApp/node_modules/prompts/lib/elements/number.js"],"names":["color","require","Prompt","cursor","erase","style","figures","clear","lines","isNumber","isDef","any","undefined","round","number","precision","factor","Math","pow","NumberPrompt","constructor","opts","transform","render","msg","message","initial","float","inc","increment","min","Infinity","max","errorMsg","error","validator","validate","value","typed","lastHit","v","placeholder","rendered","gray","_value","fire","parse","x","parseFloat","parseInt","valid","c","test","reset","exit","abort","done","aborted","out","write","close","submit","up","bell","down","delete","val","toString","length","slice","next","_","key","now","Date","closed","firstRender","outputError","columns","outputText","symbol","bold","delimiter","underline","join","split","reduce","a","l","i","pointerSmall","red","italic","line","to","save","restore","module","exports"],"mappings":"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","sourcesContent":["const color = require('kleur');\nconst Prompt = require('./prompt');\nconst { cursor, erase } = require('sisteransi');\nconst { style, figures, clear, lines } = require('../util');\n\nconst isNumber = /[0-9]/;\nconst isDef = any => any !== undefined;\nconst round = (number, precision) => {\n  let factor = Math.pow(10, precision);\n  return Math.round(number * factor) / factor;\n}\n\n/**\n * NumberPrompt Base Element\n * @param {Object} opts Options\n * @param {String} opts.message Message\n * @param {String} [opts.style='default'] Render style\n * @param {Number} [opts.initial] Default value\n * @param {Number} [opts.max=+Infinity] Max value\n * @param {Number} [opts.min=-Infinity] Min value\n * @param {Boolean} [opts.float=false] Parse input as floats\n * @param {Number} [opts.round=2] Round floats to x decimals\n * @param {Number} [opts.increment=1] Number to increment by when using arrow-keys\n * @param {Function} [opts.validate] Validate function\n * @param {Stream} [opts.stdin] The Readable stream to listen to\n * @param {Stream} [opts.stdout] The Writable stream to write readline data to\n * @param {String} [opts.error] The invalid error label\n */\nclass NumberPrompt extends Prompt {\n  constructor(opts={}) {\n    super(opts);\n    this.transform = style.render(opts.style);\n    this.msg = opts.message;\n    this.initial = isDef(opts.initial) ? opts.initial : '';\n    this.float = !!opts.float;\n    this.round = opts.round || 2;\n    this.inc = opts.increment || 1;\n    this.min = isDef(opts.min) ? opts.min : -Infinity;\n    this.max = isDef(opts.max) ? opts.max : Infinity;\n    this.errorMsg = opts.error || `Please Enter A Valid Value`;\n    this.validator = opts.validate || (() => true);\n    this.color = `cyan`;\n    this.value = ``;\n    this.typed = ``;\n    this.lastHit = 0;\n    this.render();\n  }\n\n  set value(v) {\n    if (!v && v !== 0) {\n      this.placeholder = true;\n      this.rendered = color.gray(this.transform.render(`${this.initial}`));\n      this._value = ``;\n    } else {\n      this.placeholder = false;\n      this.rendered = this.transform.render(`${round(v, this.round)}`);\n      this._value = round(v, this.round);\n    }\n    this.fire();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  parse(x) {\n    return this.float ? parseFloat(x) : parseInt(x);\n  }\n\n  valid(c) {\n    return c === `-` || c === `.` && this.float || isNumber.test(c)\n  }\n\n  reset() {\n    this.typed = ``;\n    this.value = ``;\n    this.fire();\n    this.render();\n  }\n\n  exit() {\n    this.abort();\n  }\n\n  abort() {\n    let x = this.value;\n    this.value = x !== `` ? x : this.initial;\n    this.done = this.aborted = true;\n    this.error = false;\n    this.fire();\n    this.render();\n    this.out.write(`\\n`);\n    this.close();\n  }\n\n  async validate() {\n    let valid = await this.validator(this.value);\n    if (typeof valid === `string`) {\n      this.errorMsg = valid;\n      valid = false;\n    }\n    this.error = !valid;\n  }\n\n  async submit() {\n    await this.validate();\n    if (this.error) {\n      this.color = `red`;\n      this.fire();\n      this.render();\n      return;\n    }\n    let x = this.value;\n    this.value = x !== `` ? x : this.initial;\n    this.done = true;\n    this.aborted = false;\n    this.error = false;\n    this.fire();\n    this.render();\n    this.out.write(`\\n`);\n    this.close();\n  }\n\n  up() {\n    this.typed = ``;\n    if(this.value === '') {\n      this.value = this.min - this.inc;\n    }\n    if (this.value >= this.max) return this.bell();\n    this.value += this.inc;\n    this.color = `cyan`;\n    this.fire();\n    this.render();\n  }\n\n  down() {\n    this.typed = ``;\n    if(this.value === '') {\n      this.value = this.min + this.inc;\n    }\n    if (this.value <= this.min) return this.bell();\n    this.value -= this.inc;\n    this.color = `cyan`;\n    this.fire();\n    this.render();\n  }\n\n  delete() {\n    let val = this.value.toString();\n    if (val.length === 0) return this.bell();\n    this.value = this.parse((val = val.slice(0, -1))) || ``;\n    if (this.value !== '' && this.value < this.min) {\n      this.value = this.min;\n    }\n    this.color = `cyan`;\n    this.fire();\n    this.render();\n  }\n\n  next() {\n    this.value = this.initial;\n    this.fire();\n    this.render();\n  }\n\n  _(c, key) {\n    if (!this.valid(c)) return this.bell();\n\n    const now = Date.now();\n    if (now - this.lastHit > 1000) this.typed = ``; // 1s elapsed\n    this.typed += c;\n    this.lastHit = now;\n    this.color = `cyan`;\n\n    if (c === `.`) return this.fire();\n\n    this.value = Math.min(this.parse(this.typed), this.max);\n    if (this.value > this.max) this.value = this.max;\n    if (this.value < this.min) this.value = this.min;\n    this.fire();\n    this.render();\n  }\n\n  render() {\n    if (this.closed) return;\n    if (!this.firstRender) {\n      if (this.outputError)\n        this.out.write(cursor.down(lines(this.outputError, this.out.columns) - 1) + clear(this.outputError, this.out.columns));\n      this.out.write(clear(this.outputText, this.out.columns));\n    }\n    super.render();\n    this.outputError = '';\n\n    // Print prompt\n    this.outputText = [\n      style.symbol(this.done, this.aborted),\n      color.bold(this.msg),\n      style.delimiter(this.done),\n      !this.done || (!this.done && !this.placeholder)\n          ? color[this.color]().underline(this.rendered) : this.rendered\n    ].join(` `);\n\n    // Print error\n    if (this.error) {\n      this.outputError += this.errorMsg.split(`\\n`)\n          .reduce((a, l, i) => a + `\\n${i ? ` ` : figures.pointerSmall} ${color.red().italic(l)}`, ``);\n    }\n\n    this.out.write(erase.line + cursor.to(0) + this.outputText + cursor.save + this.outputError + cursor.restore);\n  }\n}\n\nmodule.exports = NumberPrompt;\n"]},"metadata":{},"sourceType":"script"}